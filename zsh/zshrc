# for dotfiles management
# MAKE SURE TO SOURCE THIS FILE FRIM $HOME/.zshrc
export DOTFILES=$HOME/dotfiles
alias vim='vim -u $DOTFILES/vim/vimrc'
alias tmux='tmux -f $DOTFILES/tmux/tmux.conf'
ln -sf $DOTFILES/vim/coc-settings.json $HOME/.config/nvim/coc-settings.json
export MYVIMRC=$DOTFILES/vim/vimrc

export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export FPATH=$FPATH:$DOTFILES/zsh/functions

cdpath=($HOME/repos $HOME/repos/kardasis $GOPATH/src/github.com/kardasis $HOME $HOME/brazil-workplace) 

# ZSH settings 
export ZSH="$HOME/.oh-my-zsh"
 ln -sf $DOTFILES/zsh/oh-my-zsh/themes/ari.zsh-theme $ZSH/themes/ari.zsh-theme
ZSH_THEME="ari"
COMPLETION_WAITING_DOTS="true"
HIST_STAMPS="mm/dd/yyyy"

plugins=(
  git brew sudo zsh-syntax-highlighting rails python zsh-autosuggestions
)

# Load Oh My ZSH
source $ZSH/oh-my-zsh.sh

# Load auxiliary zsh setup
source $DOTFILES/zsh/aliases.zsh
source $DOTFILES/zsh/vi-bindings.zsh
source $DOTFILES/zsh/path.zsh
source $DOTFILES/zsh/app-variables.zsh

# RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*


# color settings
export CLICOLOR=1
export LSCOLORS=Cxfxcxdxbxegedabagacad

# very large history
#
export HISTCONTROL=ignoredups
HISTFILESIZE=1000000000 HISTSIZE=1000000

# Homebrew completion
if type brew &>/dev/null; then
    FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

#RDE completion
fpath=(~/.zsh/completion $fpath)

#autoload and run compinit
autoload -Uz compinit && compinit -i

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# run 'nvm use' whenever entering a directory with an nvmrc 
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# reduce the scope of git tab completion for speed
__git_files () { 
    _wanted files expl 'local files' _files     
}

autoload cd_to_git_root load-nvmrc workspace_status fzf_history

if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

setopt auto_cd

# enable autocomplete for aws 
complete -C '/usr/local/bin/aws_completer' aws
